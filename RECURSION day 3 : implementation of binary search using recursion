q1. sorting of array using recursion
bool issorted(int *a, int n){ //note a[] correct
    //base case
    if(n == 0 || n ==1 ){
        return true ;
    }
    if(a[0]>a[1]){
        return false ; // not sorted
    }
    else{
        bool remaingPart = issorted(a+1 , n-1);
        return remaingPart;
    }
}

-----------------------------------------------------------------------------------------------

q2 sum of elements of array using recursion

int getsum(int *a , int n){
    if(n ==0){
        return 0;
    }
    if(n == 1){
        return a[0];
    }
    int remainPart = getsum(a+1 , n-1);
    int sum = a[0]+ remainPart;
    
    return sum ;
}
------------------------------------------------------------------------------------------------

q3 linear search using recursion

bool linear(int *a, int n , int k){
    if(n == 0){
        return true;
    }
    if(a[0] == k){
        return true;
    }
    else{
        bool remainPart = linear(a+1 , n-1, k);
        return remainPart;
    }
}

------------------------------------------------------------------------------------------------

q4: binary search using recursion

bool binarysearch(int *a , int s , int e , int k){
    if(s>e){ //element not found base case 1
        return false;
    }
    int mid = s + (e-s)/2 ;
    //base case 2 : element found
    if(a[mid] == k ){
        return true;
    }
    if(a[mid] < k){
        return binarysearch(a,mid+1,e,k);


    }
    else{
        return binarysearch(a,s,mid-1, k);
    }
}





